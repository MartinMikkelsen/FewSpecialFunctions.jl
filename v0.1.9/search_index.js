var documenterSearchIndex = {"docs":
[{"location":"Functions/#Functions","page":"Functions","title":"Functions","text":"","category":"section"},{"location":"Functions/#Coulomb-wave-functions","page":"Functions","title":"Coulomb wave functions","text":"","category":"section"},{"location":"Functions/","page":"Functions","title":"Functions","text":"The Coulomb wave functions are solutions to the radial Schrödinger equation for a charged particle in a Coulomb potential. This package implements both the regular (F_ℓ(η, ρ)) and irregular (G_ℓ(η, ρ)) Coulomb wave functions, as well as auxiliary functions and normalization constants. The implementation follows the approach described in arXiv:1804.10976, using confluent hypergeometric functions and robust normalization. The functions are implemented for real and complex arguments, and special care is taken to ensure numerical stability across a wide range of parameters.","category":"page"},{"location":"Functions/","page":"Functions","title":"Functions","text":"F(ℓ, η, ρ): Computes the regular Coulomb wave function using the normalization constant and the confluent hypergeometric function. For real arguments, the function returns the real part.\nG(ℓ, η, ρ): Computes the irregular Coulomb wave function as a combination of outgoing and incoming solutions.\nC(ℓ, η): Returns the normalization constant for the regular solution.\nη(a, k): Computes the Coulomb parameter.\nH⁺ and H⁻: Outgoing and incoming Coulomb wave functions, respectively.","category":"page"},{"location":"Functions/","page":"Functions","title":"Functions","text":"The implementation is robust for both small and large arguments, and auxiliary functions such as derivatives and normalization factors are also provided. See the reference for mathematical details.","category":"page"},{"location":"Functions/","page":"Functions","title":"Functions","text":"using Plots, FewSpecialFunctions, LaTeXStrings # hide\nENV[\"GKSwstype\"] = \"100\" # hide\n\nplot_font = \"Computer Modern\" # hide\ndefault(fontfamily=plot_font,linewidth=2.5, framestyle=:box, label=nothing, grid=true,palette=:tab10) # hide\nx = range(0, stop=25, length=1000)\nplot(x, real(F.(0.0, 0.3, x)), label=L\"F_0(0.3,ρ)\")\nplot!(x, real(F.(0.0, -0.3, x)), label=L\"F_0(-0.3,ρ)\")\nxlabel!(L\"ρ\")\ntitle!(\"Regular Coulomb Wave Functions\")","category":"page"},{"location":"Functions/","page":"Functions","title":"Functions","text":"Use a similar approach to plot the regular Coulomb functions for different a ell","category":"page"},{"location":"Functions/","page":"Functions","title":"Functions","text":"using Plots, FewSpecialFunctions, LaTeXStrings # hide\nENV[\"GKSwstype\"] = \"100\" # hide\n\nplot_font = \"Computer Modern\" # hide\ndefault(fontfamily=plot_font,linewidth=2.5, framestyle=:box, label=nothing, grid=true,palette=:tab10) # hide\nx = range(0, stop=25, length=1000)\nplot(x, real(F.(1e-5, 5.0, x)), label=L\"F_0(5.0,ρ)\", linewidth=2)\nplot!(x, real(F.(1.0, 5.0, x)), label=L\"F_1(5.0,ρ)\", linewidth=2)\nplot!(x, real(F.(2.0, 5.0, x)), label=L\"F_2(5.0,ρ)\", linewidth=2)\nplot!(x, real(F.(3.0, 5.0, x)), label=L\"F_3(5.0,ρ)\", linewidth=2)\ntitle!(\"Regular Coulomb Wave Functions for Different ℓ\")\nxlabel!(L\"ρ\")","category":"page"},{"location":"Functions/#Complex-plots","page":"Functions","title":"Complex plots","text":"","category":"section"},{"location":"Functions/","page":"Functions","title":"Functions","text":"using DomainColoring, FewSpecialFunctions, Plots\n\ndomaincolor(z -> F(0,z,z), [-2, 2, 0, 5], grid=true)","category":"page"},{"location":"Functions/#Marcum-Q-function","page":"Functions","title":"Marcum Q-function","text":"","category":"section"},{"location":"Functions/","page":"Functions","title":"Functions","text":"The Marcum Q-function is a generalized integral involving the modified Bessel function of the first kind. It is widely used in communications and radar signal processing. The implementation in this package is based on the methods described in arXiv:1311.0681v1, providing accurate results for a wide range of parameters.","category":"page"},{"location":"Functions/","page":"Functions","title":"Functions","text":"MarcumQ(μ, a, b): Computes the Marcum Q-function for order μ, non-centrality parameter a, and threshold b. The implementation uses series expansions, asymptotic expansions, and recurrence relations for efficiency and accuracy.\ndQdb(M, a, b): Computes the derivative of the Marcum Q-function with respect to b.","category":"page"},{"location":"Functions/","page":"Functions","title":"Functions","text":"The code automatically selects the most appropriate algorithm depending on the input parameters.","category":"page"},{"location":"Functions/","page":"Functions","title":"Functions","text":"using Plots, FewSpecialFunctions, LaTeXStrings  # hide\nENV[\"GKSwstype\"] = \"100\" # hide\n\nplot_font = \"Computer Modern\" # hide\ndefault(fontfamily=plot_font,linewidth=2.5, framestyle=:box, label=nothing, grid=true,palette=:tab10) # hide\nbs = collect(range(0.0,10,length=100))\nM1 = MarcumQ(1, 0.2, bs)\nM2 = MarcumQ(1, 1.3, bs)\nM3 = MarcumQ(1, 2.5, bs)\nM4 = MarcumQ(1, 4.7, bs)\n\nplot(bs, M1, label=L\"a=0.2\")\nplot!(bs, M2, label=L\"a=1.3\")\nplot!(bs, M3, label=L\"a=2.5\")\nplot!(bs, M4, label=L\"a=4.7\")\nplot!(xlabel=\"b\", ylabel=L\"Q(1,a,b)\", title=\"Marcum Q-function\")","category":"page"},{"location":"Functions/#Derivative-of-the-Marcum-Q-function","page":"Functions","title":"Derivative of the Marcum Q-function","text":"","category":"section"},{"location":"Functions/","page":"Functions","title":"Functions","text":"using Plots, FewSpecialFunctions, LaTeXStrings  # hide\nENV[\"GKSwstype\"] = \"100\" # hide\n\nplot_font = \"Computer Modern\" # hide\ndefault(fontfamily=plot_font,linewidth=2.5, framestyle=:box, label=nothing, grid=true,palette=:tab10) # hide\n\nbs = collect(range(0.0,10,length=100))\nM1 = dQdb(1, 0.2, bs)\nplot(bs, M1, label=L\"a=0.2\")","category":"page"},{"location":"Functions/#Parabolic-cylinder-functions","page":"Functions","title":"Parabolic cylinder functions","text":"","category":"section"},{"location":"Functions/","page":"Functions","title":"Functions","text":"The parabolic cylinder functions U(a, x) and V(a, x) are solutions to the parabolic cylinder differential equation. The implementation is based on series expansions and asymptotic formulas, following standard references. The code is optimized for both small and large arguments, and handles edge cases robustly.","category":"page"},{"location":"Functions/","page":"Functions","title":"Functions","text":"U(a, x): Computes the parabolic cylinder function of the first kind using a combination of series and asymptotic expansions.\nV(a, x): Computes the second, linearly independent solution, using similar techniques.","category":"page"},{"location":"Functions/","page":"Functions","title":"Functions","text":"The implementation is adapted from S. Zhang and J. Jin, 'Computation of Special Functions' (Wiley, 1966) and other standard sources.","category":"page"},{"location":"Functions/","page":"Functions","title":"Functions","text":"using Plots, FewSpecialFunctions, LaTeXStrings # hide\nENV[\"GKSwstype\"] = \"100\" # hide\n\nplot_font = \"Computer Modern\" # hide\ndefault(fontfamily=plot_font,linewidth=2.5, framestyle=:box, label=nothing, grid=true,palette=:tab10) # hide\nxs = collect(-2.5:0.05:2.5)\nplot(xs, U(0.5, xs), label=L\"a=0.5\")\nplot!(xs, U(2.0, xs), label=L\"a=2.0\")\nplot!(xs, U(3.5, xs), label=L\"a=3.5\")\nplot!(xs, U(5.0, xs), label=L\"a=5.0\")\nplot!(xs, U(8.0, xs), label=L\"a=8.0\")\nplot!(xlabel=\"x\", ylabel=L\"U(a,x)\", title=\"Parabolic Cylinder Function U(a,x)\")","category":"page"},{"location":"Functions/#V(a,-x)","page":"Functions","title":"V(a, x)","text":"","category":"section"},{"location":"Functions/","page":"Functions","title":"Functions","text":"The function V(a, x) is a second, linearly independent solution to the same differential equation satisfied by U(a, x). The implementation of V(a, x) in FewSpecialFunctions.jl uses a combination of convergent series and asymptotic expansions adapted from standard references.","category":"page"},{"location":"Functions/","page":"Functions","title":"Functions","text":"using Plots, FewSpecialFunctions, LaTeXStrings  # hide\nENV[\"GKSwstype\"] = \"100\" # hide\n\nplot_font = \"Computer Modern\" # hide\ndefault(fontfamily=plot_font,linewidth=2.5, framestyle=:box, label=nothing, grid=true,palette=:tab10) # hide\nxs = collect(range(-2.5,2.5,length=100))\nV1 = V(0.5, xs)\nV2 = V(2.0, xs)\nV3 = V(3.5, xs)\nV4 = V(5.0, xs)\n\nplot(xs, V1, label=L\"a=0.5\")\nplot!(xs, V2, label=L\"a=2.0\")\nplot!(xs, V3, label=L\"a=3.5\")\nplot!(xs, V4, label=L\"a=5.0\")\nylims!(-3.0, 3.0)  \nplot!(xlabel=\"x\", ylabel=L\"V(a,x)\", title=\"Parabolic cylinder function V(a,x)\")","category":"page"},{"location":"Functions/#Debye-functions","page":"Functions","title":"Debye functions","text":"","category":"section"},{"location":"Functions/","page":"Functions","title":"Functions","text":"The Debye functions are given by","category":"page"},{"location":"Functions/","page":"Functions","title":"Functions","text":"    D_n(betax)= fracnx^n int_0^x fract^n(texte^t-1)^beta  textdt","category":"page"},{"location":"Functions/","page":"Functions","title":"Functions","text":"And","category":"page"},{"location":"Functions/","page":"Functions","title":"Functions","text":"using Plots, FewSpecialFunctions, LaTeXStrings # hide\nENV[\"GKSwstype\"] = \"100\" # hide\n\nplot_font = \"Computer Modern\" # hide\ndefault(fontfamily=plot_font,linewidth=2.5, framestyle=:box, label=nothing, grid=true,palette=:tab10) # hide\nx = range(0,stop=25,length=1000)\nplot(x,debye_function(1.0,1.0,x),label=L\"D_1(x)\")\nplot!(x,debye_function(2.0,1.0,x),label=L\"D_2(x)\")\nplot!(x,debye_function(3.0,1.0,x), label=L\"D_3(x)\")\ntitle!(\"Debye Functions\")\nxlabel!(L\"x\")\nsavefig(\"debye.svg\"); nothing # hide","category":"page"},{"location":"Functions/","page":"Functions","title":"Functions","text":"(Image: )","category":"page"},{"location":"Functions/#Struve-functions","page":"Functions","title":"Struve functions","text":"","category":"section"},{"location":"Functions/","page":"Functions","title":"Functions","text":"The Struve functions are solutions of the non-homogeneous Bessel's differential equation","category":"page"},{"location":"Functions/","page":"Functions","title":"Functions","text":"    x^2 fractextd^2 ytextdx^2 + x fractextdytextdx+(x^2-alpha^2)y = frac4(x2)^alpha+1sqrtpiGamma(alpha+12)","category":"page"},{"location":"Functions/","page":"Functions","title":"Functions","text":"The Struve functions are implemented using the following integral representation","category":"page"},{"location":"Functions/","page":"Functions","title":"Functions","text":"    mathbfH_nu(z) = frac2(z2)^nusqrtpiGamma(nu+12) int_0^1 (1-t)^nu-12sin(zt)  textdt","category":"page"},{"location":"Functions/","page":"Functions","title":"Functions","text":"And","category":"page"},{"location":"Functions/","page":"Functions","title":"Functions","text":"    mathbfH_nu(z) = frac2(z2)^nusqrtpiGamma(nu+12) int_0^pi2 sin(zcos(theta)) sin^2nu(theta)  textdtheta","category":"page"},{"location":"Functions/","page":"Functions","title":"Functions","text":"Here is an example","category":"page"},{"location":"Functions/","page":"Functions","title":"Functions","text":"using Plots, FewSpecialFunctions, LaTeXStrings # hide\nENV[\"GKSwstype\"] = \"100\" # hide\n\nplot_font = \"Computer Modern\" # hide\ndefault(fontfamily=plot_font,linewidth=2.5, framestyle=:box, label=nothing, grid=true,palette=:tab10) # hide\nx = range(-5,stop=5,length=1000)\nplot(x,Struve.(0,x),label=L\"H_0(x)\")\nplot!(x,Struve.(1,x),label=L\"H_1(x)\")\nplot!(x,Struve.(2,x),label=L\"H_2(x)\")\nplot!(x,Struve.(3,x),label=L\"H_3(x)\")\nplot!(x,Struve.(4,x),label=L\"H_4(x)\")\nplot!(x,Struve.(5,x),label=L\"H_5(x)\")\nxlabel!(L\"x\")\ntitle!(\"Struve Functions\")","category":"page"},{"location":"Functions/#Fermi-Dirac-integrals","page":"Functions","title":"Fermi-Dirac integrals","text":"","category":"section"},{"location":"Functions/","page":"Functions","title":"Functions","text":"In solid state physics the Fermi-Dirac integral is given by","category":"page"},{"location":"Functions/","page":"Functions","title":"Functions","text":"    F_j(x) = int_0^infty fract^jexp(t-x)+1  dt","category":"page"},{"location":"Functions/","page":"Functions","title":"Functions","text":"Approximations to this and the normalized case for j=-12, j=12, j=32 and j=52 are implemented to varying accuacy. Most are of the order of 10^-12.","category":"page"},{"location":"Functions/","page":"Functions","title":"Functions","text":"Here is an example","category":"page"},{"location":"Functions/","page":"Functions","title":"Functions","text":"using Plots, FewSpecialFunctions, LaTeXStrings # hide\nENV[\"GKSwstype\"] = \"100\" # hide\n\nplot_font = \"Computer Modern\" # hide\ndefault(fontfamily=plot_font,linewidth=2.5, framestyle=:box, label=nothing, grid=true,palette=:tab10) # hide\nx = range(0,stop=100,length=10000)\nplot(x,FermiDiracIntegralNorm.(-1/2,x),label=L\"F_{-1/2}(x)\")\nplot!(x,FermiDiracIntegralNorm.(1/2,x),label=L\"F_{1/2}(x)\")\nplot!(x,FermiDiracIntegralNorm.(3/2,x),label=L\"F_{3/2}(x)\")\nplot!(x,FermiDiracIntegralNorm.(5/2,x),label=L\"F_{5/2}(x)\")\nxlabel!(L\"x\")\ntitle!(\"Fermi-Dirac Integral\")","category":"page"},{"location":"Functions/#Clausen-functions","page":"Functions","title":"Clausen functions","text":"","category":"section"},{"location":"Functions/","page":"Functions","title":"Functions","text":"The Clausen functions are implemented for orders 1 through 6, using a combination of series summation and analytic continuation. The code is based on the methods described in this paper.","category":"page"},{"location":"Functions/","page":"Functions","title":"Functions","text":"Clausen(n, θ): Computes the Clausen function of order n at angle θ.\nF_clausen, f_n, Ci_complex: Auxiliary functions for advanced use and analytic continuation.","category":"page"},{"location":"Functions/","page":"Functions","title":"Functions","text":"using Plots, FewSpecialFunctions, LaTeXStrings # hide\nENV[\"GKSwstype\"] = \"100\" # hide\n\nplot_font = \"Computer Modern\" # hide\ndefault(fontfamily=plot_font,linewidth=2.5, framestyle=:box, label=nothing, grid=true,palette=:tab10) # hide\n\nθ = collect(range(0, 2π, length=100))\n\nplot(θ,Clausen.(1, θ), label=L\"C_1(θ)\")\nplot!(θ,Clausen.(2, θ), label=L\"C_2(θ)\")\nplot!(θ,Clausen.(3, θ), label=L\"C_3(θ)\")\nplot!(θ,Clausen.(4, θ), label=L\"C_4(θ)\")\n\nxlabel!(L\"\\theta\")\ntitle!(\"Clausen Functions\")","category":"page"},{"location":"Functions/#Fresnel-integrals","page":"Functions","title":"Fresnel integrals","text":"","category":"section"},{"location":"Functions/","page":"Functions","title":"Functions","text":"The Fresnel integrals C(x) and S(x) are implemented using the complex error function, matching the NIST and MATLAB conventions. The implementation is accurate for both real and complex arguments, and provides auxiliary values for advanced applications.","category":"page"},{"location":"Functions/","page":"Functions","title":"Functions","text":"FresnelC(x): Computes the Fresnel cosine integral.\nFresnelS(x): Computes the Fresnel sine integral.\nFresnelE(x): Auxiliary value, C(x) + i S(x).","category":"page"},{"location":"Functions/","page":"Functions","title":"Functions","text":"All functions are implemented with attention to numerical stability and efficiency, and references to the original papers are provided for further reading.","category":"page"},{"location":"Functions/","page":"Functions","title":"Functions","text":"using Plots, FewSpecialFunctions, LaTeXStrings # hide\nENV[\"GKSwstype\"] = \"100\" # hide\n\nplot_font = \"Computer Modern\" # hide\ndefault(fontfamily=plot_font,linewidth=2.5, framestyle=:box, label=nothing, grid=true,palette=:tab10) # hide\n\nxes = collect(range(0, 5, length=250))\nplot(xes, FewSpecialFunctions.FresnelC.(xes), label=L\"C(x)\")\nplot!(xes, FewSpecialFunctions.FresnelS.(xes), label=L\"S(x)\")","category":"page"},{"location":"#FewSpecialFunctions.jl","page":"Home","title":"FewSpecialFunctions.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Some special functions.","category":"page"},{"location":"#Installation","page":"Home","title":"Installation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Get the latest stable release with Julia's package manager:","category":"page"},{"location":"","page":"Home","title":"Home","text":"julia ] add FewSpecialFunctions","category":"page"},{"location":"#Quick-example","page":"Home","title":"Quick example","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Here is how to generate an Euler spiral using FewSpecialFunctions.jl. ","category":"page"},{"location":"","page":"Home","title":"Home","text":"using Plots, FewSpecialFunctions, LaTeXStrings \n\nplot_font = \"Computer Modern\"\ndefault(\n    fontfamily=plot_font,\n    linewidth=2.5, \n    framestyle=:box, \n    label=nothing, \n    grid=true,\n    palette=:tab10,\n)\n\nx = range(-25,25,length=5000)\n\nxlabel!(L\"C(x)\")\nylabel!(L\"S(x)\")\ntitle!(\"Euler Spiral\")\nplot(FresnelC.(x),FresnelS.(x))","category":"page"},{"location":"API/#References","page":"References","title":"References","text":"","category":"section"},{"location":"API/","page":"References","title":"References","text":"Clausen functions\nCoulomb wave functions\nDebye functions\nFermi-Dirac integrals\nMarcum Q-function\nParabolic cylinder functions","category":"page"},{"location":"API/#API","page":"References","title":"API","text":"","category":"section"},{"location":"API/#FewSpecialFunctions.η","page":"References","title":"FewSpecialFunctions.η","text":"η(a::Number, k::Number)\nη(ϵ::Number)\n\nCoulomb parameter. For two arguments, returns 1/(a*k). For one argument, returns 1/sqrt(ϵ).\n\n\n\n\n\n","category":"function"},{"location":"API/#FewSpecialFunctions.C","page":"References","title":"FewSpecialFunctions.C","text":"C(ℓ::Number, η::Number)\n\nCoulomb normalization constant.\n\n\n\n\n\n","category":"function"},{"location":"API/#FewSpecialFunctions.θ","page":"References","title":"FewSpecialFunctions.θ","text":"θ(ℓ::Number, η::Number, ρ::Number)\n\nCoulomb phase function.\n\n\n\n\n\n","category":"function"},{"location":"API/#FewSpecialFunctions.F","page":"References","title":"FewSpecialFunctions.F","text":"F(ℓ::Number, η::Number, ρ::Number)\n\nRegular Coulomb wave function.\n\nReferences:\n\nCoulomb wave function\nImplementation paper\n\n\n\n\n\n","category":"function"},{"location":"API/#FewSpecialFunctions.D⁺","page":"References","title":"FewSpecialFunctions.D⁺","text":"D⁺(ℓ::Number, η::Number)\n\nCoulomb D⁺ normalization factor.\n\n\n\n\n\n","category":"function"},{"location":"API/#FewSpecialFunctions.D⁻","page":"References","title":"FewSpecialFunctions.D⁻","text":"D⁻(ℓ::Number, η::Number)\n\nCoulomb D⁻ normalization factor.\n\n\n\n\n\n","category":"function"},{"location":"API/#FewSpecialFunctions.H⁺","page":"References","title":"FewSpecialFunctions.H⁺","text":"H⁺(ℓ::Number, η::Number, ρ::Number)\n\nOutgoing Coulomb wave function.\n\nReferences:\n\nCoulomb wave function\nImplementation paper\n\n\n\n\n\n","category":"function"},{"location":"API/#FewSpecialFunctions.H⁻","page":"References","title":"FewSpecialFunctions.H⁻","text":"H⁻(ℓ::Number, η::Number, ρ::Number)\n\nIncoming Coulomb wave function.\n\nReferences:\n\nCoulomb wave function\nImplementation paper\n\n\n\n\n\n","category":"function"},{"location":"API/#FewSpecialFunctions.F_imag","page":"References","title":"FewSpecialFunctions.F_imag","text":"F_imag(ℓ::Number, η::Number, ρ::Number)\n\nImaginary part of the regular Coulomb wave function.\n\n\n\n\n\n","category":"function"},{"location":"API/#FewSpecialFunctions.G","page":"References","title":"FewSpecialFunctions.G","text":"G(ℓ::Number, η::Number, ρ::Number)\n\nIrregular Coulomb wave function.\n\nReferences:\n\nCoulomb wave function\nImplementation paper\n\n\n\n\n\n","category":"function"},{"location":"API/#FewSpecialFunctions.M_regularized","page":"References","title":"FewSpecialFunctions.M_regularized","text":"M_regularized(α::Number, β::Number, γ::Number)\n\nRegularized confluent hypergeometric function.\n\n\n\n\n\n","category":"function"},{"location":"API/#FewSpecialFunctions.Φ","page":"References","title":"FewSpecialFunctions.Φ","text":"Φ(ℓ::Number, η::Number, ρ::Number)\n\nModified Coulomb function Φ.\n\n\n\n\n\n","category":"function"},{"location":"API/#FewSpecialFunctions.w","page":"References","title":"FewSpecialFunctions.w","text":"w(ℓ::Integer, η::Number)\nw(ℓ::Number, η::Number)\n\nAuxiliary function for Coulomb wave functions.\n\n\n\n\n\n","category":"function"},{"location":"API/#FewSpecialFunctions.w_plus","page":"References","title":"FewSpecialFunctions.w_plus","text":"w_plus(ℓ::Number, η::Number)\n\nAuxiliary function for Coulomb wave functions.\n\n\n\n\n\n","category":"function"},{"location":"API/#FewSpecialFunctions.w_minus","page":"References","title":"FewSpecialFunctions.w_minus","text":"w_minus(ℓ::Number, η::Number)\n\nAuxiliary function for Coulomb wave functions.\n\n\n\n\n\n","category":"function"},{"location":"API/#FewSpecialFunctions.h_plus","page":"References","title":"FewSpecialFunctions.h_plus","text":"h_plus(ℓ::Number, η::Number)\n\nAuxiliary function for Coulomb wave functions.\n\n\n\n\n\n","category":"function"},{"location":"API/#FewSpecialFunctions.h_minus","page":"References","title":"FewSpecialFunctions.h_minus","text":"h_minus(ℓ::Number, η::Number)\n\nAuxiliary function for Coulomb wave functions.\n\n\n\n\n\n","category":"function"},{"location":"API/#FewSpecialFunctions.g","page":"References","title":"FewSpecialFunctions.g","text":"g(ℓ::Number, η::Number)\n\nAuxiliary function for Coulomb wave functions.\n\n\n\n\n\n","category":"function"},{"location":"API/#FewSpecialFunctions.Φ_dot","page":"References","title":"FewSpecialFunctions.Φ_dot","text":"Φ_dot(ℓ::Number, η::Number, ρ::Number; h=1e-6)\n\nNumerical derivative of Φ with respect to ℓ.\n\n\n\n\n\n","category":"function"},{"location":"API/#FewSpecialFunctions.F_dot","page":"References","title":"FewSpecialFunctions.F_dot","text":"F_dot(ℓ::Number, η::Number, ρ::Number; h=1e-6)\n\nNumerical derivative of F with respect to ℓ.\n\n\n\n\n\n","category":"function"},{"location":"API/#FewSpecialFunctions.Ψ","page":"References","title":"FewSpecialFunctions.Ψ","text":"Ψ(ℓ::Number, η::Number, ρ::Number; h=1e-6)\n\nAuxiliary function for Coulomb wave functions.\n\n\n\n\n\n","category":"function"},{"location":"API/#FewSpecialFunctions.I","page":"References","title":"FewSpecialFunctions.I","text":"I(ℓ::Number, η::Number, ρ::Number; h=1e-6)\n\nAuxiliary function for Coulomb wave functions.\n\n\n\n\n\n","category":"function"},{"location":"API/#FewSpecialFunctions.debye_function","page":"References","title":"FewSpecialFunctions.debye_function","text":"debye_function(n::Float64, β::Float64, x::Float64; \n              tol=1e-35, max_terms=2000) -> Float64\n\nCompute the generalized Debye function with parameters n, β, and x.\n\nReferences:\n\nDebye function    \nPaper\n\n\n\n\n\n","category":"function"},{"location":"API/#FewSpecialFunctions.FresnelC","page":"References","title":"FewSpecialFunctions.FresnelC","text":"FresnelC(z::Number) -> Number\n\nComputes the Fresnel cosine integral C(z) for the given number z.\n\nArguments\n\nz::Number: The input value (can be real or complex).\n\nReturns\n\nNumber: The value of the Fresnel cosine integral at z.\n\n\n\n\n\n","category":"function"},{"location":"API/#FewSpecialFunctions.FresnelS","page":"References","title":"FewSpecialFunctions.FresnelS","text":"FresnelS(z::Number) -> Number\n\nComputes the Fresnel sine integral S(z) for a given number z.\n\nArguments\n\nz::Number: The input value (real or complex) at which to evaluate the Fresnel sine integral.\n\nReturns\n\nNumber: The value of the Fresnel sine integral S(z).\n\n\n\n\n\n","category":"function"},{"location":"API/#FewSpecialFunctions.FresnelE","page":"References","title":"FewSpecialFunctions.FresnelE","text":"FresnelE(z::Number) -> Number\n\nComputes the Fresnel E integral for the given input z.\n\nArguments\n\nz::Number: The input value (real or complex) at which to evaluate the Fresnel E integral.\n\nReturns\n\nNumber: The value of the Fresnel E integral at z.\n\n\n\n\n\n","category":"function"},{"location":"API/#FewSpecialFunctions.Struve","page":"References","title":"FewSpecialFunctions.Struve","text":"Struve(ν,z,min_tol=1e-15)\n\nReturns the Struve function given by\n\n    mathbfH_nu(z) = frac2(z2)^nusqrtpiGamma(nu+12) int_0^1 (1-t)^nu-12sin(zt)  textdt\n\n\n\n\n\n","category":"function"},{"location":"API/#FewSpecialFunctions.Clausen","page":"References","title":"FewSpecialFunctions.Clausen","text":"Clausen(n::Int, θ::Float64; N::Int=10, m::Int=20)\n\nCompute the Clausen function of order n at angle θ.\n\nReferences:\n\nClausen function\nImplementation paper\n\n\n\n\n\n","category":"function"},{"location":"API/#FewSpecialFunctions.Ci_complex","page":"References","title":"FewSpecialFunctions.Ci_complex","text":"Ci_complex(z::ComplexF64)\n\nComplex cosine integral function used in Clausen function calculations.\n\n\n\n\n\n","category":"function"},{"location":"API/#FewSpecialFunctions.f_n","page":"References","title":"FewSpecialFunctions.f_n","text":"f_n(n::Int, k::Int, θ::Float64)\n\nCompute the Clausen series summand fₙ(k, θ):     sin(kθ)/kⁿ for even n,     cos(kθ)/kⁿ for odd n.\n\n\n\n\n\n","category":"function"},{"location":"API/#FewSpecialFunctions.F_clausen","page":"References","title":"FewSpecialFunctions.F_clausen","text":"F_clausen(n::Int, z::ComplexF64, θ::Float64)\n\nDispatch to the correct primitive function Fₙ(z, θ) for n = 1..6.\n\n\n\n\n\n","category":"function"},{"location":"API/#FewSpecialFunctions.FermiDiracIntegral","page":"References","title":"FewSpecialFunctions.FermiDiracIntegral","text":"FermiDiracIntegral(j, x)\n\nThe Fermi-Dirac integral\n\nReturns the value F_j(x)\n\nResources: [1] D. Bednarczyk and J. Bednarczyk, Phys. Lett. A, 64, 409 (1978) [2] J. S. Blakemore, Solid-St. Electron, 25, 1067 (1982) [3] X. Aymerich-Humet, F. Serra-Mestres, and J. Millan, Solid-St. Electron, 24, 981 (1981) [4] X. Aymerich-Humet, F. Serra-Mestres, and J. Millan, J. Appl. Phys., 54, 2850 (1983) [5] H. M. Antia, Rational Function Approximations for Fermi-Dirac Integrals (1993)\n\nhttps://arxiv.org/abs/0811.0116 https://de.wikipedia.org/wiki/Fermi-Dirac-Integral https://dlmf.nist.gov/25.12#iii\n\n\n\n\n\n","category":"function"},{"location":"API/#FewSpecialFunctions.FermiDiracIntegralNorm","page":"References","title":"FewSpecialFunctions.FermiDiracIntegralNorm","text":"FermiDiracIntegralNorm(j,x)\n\nThe Fermi-Dirac integral\n\n    F_j(x) = frac1Gamma(j+1)int_0^infty fract^jexp(t-x)+1  dt\n\nReturns the value F_j(x)\n\nResources: [1] D. Bednarczyk and J. Bednarczyk, Phys. Lett. A, 64, 409 (1978) [2] J. S. Blakemore, Solid-St. Electron, 25, 1067 (1982) [3] X. Aymerich-Humet, F. Serra-Mestres, and J. Millan, Solid-St. Electron, 24, 981 (1981) [4] X. Aymerich-Humet, F. Serra-Mestres, and J. Millan, J. Appl. Phys., 54, 2850 (1983) [5] H. M. Antia, Rational Function Approximations for Fermi-Dirac Integrals (1993)\n\nhttps://arxiv.org/abs/0811.0116 https://de.wikipedia.org/wiki/Fermi-Dirac-Integral https://dlmf.nist.gov/25.12#iii\n\n\n\n\n\n","category":"function"},{"location":"API/#FewSpecialFunctions.MarcumQ","page":"References","title":"FewSpecialFunctions.MarcumQ","text":"MarcumQ(μ::Float64, a::Float64, b::Float64)\n\nCompute the generalized Marcum Q-function of order μ with non-centrality parameter a and threshold b.\n\nReference:     [1] https://arxiv.org/pdf/1311.0681v1\n\n\n\n\n\n","category":"function"},{"location":"API/#FewSpecialFunctions.dQdb","page":"References","title":"FewSpecialFunctions.dQdb","text":"dQdb(M, a, b)\n\nDerivative ∂Q_M(a,b)/∂b of the (standard) Marcum Q-function of order M. Requires M integer ≥1 and a>0.\n\n\n\n\n\n","category":"function"},{"location":"API/#FewSpecialFunctions.U","page":"References","title":"FewSpecialFunctions.U","text":"U(a::Float64, x::Float64)::Float64\n\nCompute the parabolic cylinder function U(a,x) of the first kind for real parameters.\n\nS. Zhang and J. Jin, 'Computation of Special functions' (Wiley, 1966), E. Cojocaru, January 2009\n\n\n\n\n\n","category":"function"},{"location":"API/#FewSpecialFunctions.V","page":"References","title":"FewSpecialFunctions.V","text":"V(a::Float64, x::Float64)::Float64\n\nCompute the parabolic cylinder function V(a,x).\n\n\n\n\n\n","category":"function"},{"location":"API/#FewSpecialFunctions.W","page":"References","title":"FewSpecialFunctions.W","text":"W(a::Float64, x::Float64)::Float64\n\nCompute the parabolic cylinder function W(a,x) for real parameters.\n\n\n\n\n\n","category":"function"},{"location":"API/#FewSpecialFunctions.dU","page":"References","title":"FewSpecialFunctions.dU","text":"dU(a::Float64, x::Float64)::Float64\n\nCompute the derivative of the parabolic cylinder function U(a,x) for real parameters.\n\n\n\n\n\n","category":"function"},{"location":"API/#FewSpecialFunctions.dV","page":"References","title":"FewSpecialFunctions.dV","text":"dV(a::Float64, x::Float64)::Float64\n\nCompute the derivative of the parabolic cylinder function V(a,x) for real parameters.\n\n\n\n\n\n","category":"function"},{"location":"API/#FewSpecialFunctions.dW","page":"References","title":"FewSpecialFunctions.dW","text":"dW(a::Float64, x::Float64)::Float64\n\nCompute the derivative of the parabolic cylinder function W with parameters a evaluated at x.\n\n\n\n\n\n","category":"function"}]
}
